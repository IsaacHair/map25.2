//This bad boy will move a box on the screen based on if keys are pressed
//There is no realistic acceleration, it is just moving at a constant speed
//if a key is pressed.
//Even "gravity" is just a constant speed down if no vertical buttons are pressed.
//Screen wrapping is non-existant.

heap y x dummy

#trans a b
	imm addr0 0xffff
	imm addr1 b
	imm gen0 0xffff
	ram gen1
	imm addr0 0xffff
	imm addr1 a
	gen ramall

#set a b
	imm addr0 0xffff
	imm addr1 a
	imm ramall b

#shift ptr offset
	//positive is left rotate (pads with zeros upon wrap around)
	//eg offset is the exonent of the transformation
	eval int i
	imm gen0 0xffff
	imm addr0 0xffff
	imm addr1 ptr
	ram gen1
	fordef i = offset; i>0; i--
		imm addr0 0xffff
		rol addr1
		imm addr0 0x0001
		imm gen0 0xffff
		addr gen1
	fordef i = -offset; i>0; i--
		imm addr0 0xffff
		ror addr1
		imm addr0 0x8000
		imm gen0 0xffff
		addr gen1

#genpred_iterate width section
	//edge detect while tracking test width
	//the section is the uppermost bit of the TESTED portion
	eval int widthnew sectionnew
	eval int mask
	eval mask = (1<<(section+1)-1);
	if gen mask
		ifdef width>=1
			eval widthnew = width/2;
			eval sectionnew = section-(width/2);
			genpred_iterate widthnew sectionnew
		elsedef
			eval mask = (1<<(section+1)-1);
			imm gen0 mask
			eval mask = mask>>1;
			ifdef mask
				imm gen1 mask
	else
		ifdef width>=1
			eval widthnew = width/2;
			eval sectionnew = section+(width/2);
			genpred_iterate widthnew sectionnew
		elsedef ifdef section != 14
			//is ok of the mask goes above 0xffff because int
			eval mask = (1<<(section+2)-1);
			ifdef mask&0xffff
				imm gen0 mask
			eval mask = mask>>1;
			imm gen1 mask
		elsedef
			genpred_iterate 0 15

#genpred
	genpred_iterate 8 7

!add number delta
	imm addr0 0xffff
	imm addr1 delta
	imm gen0 0xffff
	ram gen1
	imm addr0 0xffff
	imm addr1 number
	eval int idx
	if gen 0x0001
		if ram 0x0001
			imm gen0 0x0001
			goto 1 carry
		else
			goto 1 noncarry
	else
		if ram 0x0001
			imm gen1 0x0001
			goto 1 noncarry
		else
			goto 1 noncarry
	fordef idx=1; idx<0x8000; idx = idx<<1
		nocarry:
			if gen idx
				if ram idx
					imm gen0 idx
					goto 2 carry
				else
					goto 1 noncarry
			else
				if ram idx
					imm gen1 idx
					goto 1 noncarry
				else
					goto 1 noncarry
		carry:
			if gen idx
				if ram idx
					goto 1 carry
				else
					imm gen0 idx
					goto 1 carry
			else
				if ram idx
					goto 1 carry
				else
					imm gen1 idx
					goto 1 noncarry
	nocarry:
		if gen idx
			if ram idx
				imm gen0 idx
				goto 1 end
			else
				goto 1 end
		else
			if ram idx
				imm gen1 idx
				goto 1 end
			else
				goto 1 end
	carry:
		if gen idx
			if ram idx
				goto 1 end
			else
				imm gen0 idx
				goto 1 end
		else
			if ram idx
				goto 1 end
			else
				imm gen1 idx
				goto 1 end
	end:
	gen ramall

//dummy fx
!keygen
	imm gen0 0xffff
	imm gen1 0xffff

//dummy fx; just prints value of col and then row with ~1 second delays
!whitebox row col
	imm addr0 0xffff
	imm addr1 row
	imm out0 0xffff
	ram out1
	for imm gen1 0xffff:: gen 0xffff:: genpred
	imm addr0 0xffff
	imm addr1 row
	imm out0 0xffff
	ram out1
	for imm gen1 0xffff:: gen 0xffff:: genpred

main
	imm dir0 0xffff
	set x 0x0000
	set y 0x1000
	for imm gen1 0xffff:: gen 0xffff::
		for imm gen0 0xffff; imm gen1 0x0800:: gen 0xffff:: genpred
		keygen
		if gen 0x0020
			set dummy 0x0088
			add x dummy
		else if gen 0x2000
			set dummy 0xff78
			add x dummy
		keygen
		if gen 0x0100
			set dummy 0x0088
			add y dummy
		else if gen 0x0200
			set dummy 0xff78
			add y dummy
		else
			set dummy 0xfff0
			add y dummy
		whitebox x y 
		shift dummy 5
		shift dummy -5
